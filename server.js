const express = require('express');
const fs = require('fs');
const path = require('path');
const helmet = require('helmet');
const morgan = require('morgan');

const app = express();
const PORT = 3000;
const DATA_FILE = path.join(__dirname, 'bookings.json');

// ะะดะผะธะฝ-ะดะฐะฝะฝัะต (ะฒ ัะตะฐะปัะฝะพะผ ะฟัะพะตะบัะต ะธัะฟะพะปัะทัะน .env)
const ADMIN_CREDENTIALS = {
  username: 'admin',
  password: 'yourSecurePassword123'
};

// Middleware
app.use(express.json());
app.use(express.static(__dirname));
app.use(helmet());
app.use(morgan('combined'));

// ะัะฟะพะผะพะณะฐัะตะปัะฝัะต ััะฝะบัะธะธ
function readBookings() {
  const data = fs.readFileSync(DATA_FILE, 'utf8');
  return JSON.parse(data);
}

function writeBookings(bookings) {
  fs.writeFileSync(DATA_FILE, JSON.stringify(bookings, null, 2));
}

// --- API ---

// POST /api/book โ ะดะพะฑะฐะฒะปะตะฝะธะต ะทะฐะฟะธัะธ
app.post('/api/book', (req, res) => {
  const newBooking = req.body;

  if (!newBooking.name || !newBooking.phone || !newBooking.service || !newBooking.master || !newBooking.datetime || !newBooking.price) {
    return res.status(400).json({ error: 'ะะฐะฟะพะปะฝะธัะต ะฒัะต ะฟะพะปั' });
  }

  try {
    let bookings = readBookings();

    // ะัะพะฒะตัะบะฐ ะดัะฑะปะธะบะฐัะพะฒ ะฟะพ ะฒัะตะผะตะฝะธ ะธ ะผะฐััะตัั
    const exists = bookings.some(b =>
      b.datetime === newBooking.datetime && b.master === newBooking.master
    );

    if (exists) {
      return res.status(400).json({ error: 'ะะฐ ััะพ ะฒัะตะผั ัะถะต ะตััั ะทะฐะฟะธัั ั ััะพะณะพ ะผะฐััะตัะฐ.' });
    }

    bookings.push(newBooking);
    writeBookings(bookings);

    console.log('โ ะะฐะฟะธัั ะดะพะฑะฐะฒะปะตะฝะฐ:', newBooking);
    res.json({ success: true });

  } catch (err) {
    console.error('โ ะัะธะฑะบะฐ ะฟัะธ ะพะฑัะฐะฑะพัะบะต ะทะฐะฟัะพัะฐ:', err);
    res.status(500).json({ error: 'ะัะธะฑะบะฐ ัะตัะฒะตัะฐ' });
  }
});

// GET /api/bookings โ ะฟะพะปััะธัั ะฒัะต ะทะฐะฟะธัะธ (ะฑะตะท ะทะฐัะธัั)
app.get('/api/bookings', (req, res) => {
  try {
    const bookings = readBookings();
    res.json(bookings);
  } catch (err) {
    console.error('โ ะัะธะฑะบะฐ ััะตะฝะธั ะทะฐะฟะธัะตะน:', err);
    res.status(500).json({ error: 'ะะต ัะดะฐะปะพัั ะทะฐะณััะทะธัั ะทะฐะฟะธัะธ' });
  }
});

// DELETE /api/bookings โ ัะดะฐะปะตะฝะธะต ะทะฐะฟะธัะธ (ัะพะปัะบะพ ะดะปั ะฐะดะผะธะฝะฐ)
app.delete('/api/bookings', (req, res) => {
  const auth = req.headers.authorization;

  if (!auth || !auth.startsWith('Basic ')) {
    return res.status(401).json({ error: 'ะะพัััะฟ ะทะฐะฟัะตััะฝ' });
  }

  const base64Credentials = auth.split(' ')[1];
  const credentials = Buffer.from(base64Credentials, 'base64').toString('utf-8');
  const [username, password] = credentials.split(':');

  if (username !== ADMIN_CREDENTIALS.username || password !== ADMIN_CREDENTIALS.password) {
    return res.status(401).json({ error: 'ะะตะฒะตัะฝัะต ะปะพะณะธะฝ ะธะปะธ ะฟะฐัะพะปั' });
  }

  const { name, datetime } = req.body;

  if (!name || !datetime) {
    return res.status(400).json({ error: 'ะะต ัะบะฐะทะฐะฝั ะธะผั ะธะปะธ ะดะฐัะฐ' });
  }

  try {
    let bookings = readBookings();
    const beforeCount = bookings.length;

    bookings = bookings.filter(b => !(b.name === name && b.datetime === datetime));

    if (bookings.length === beforeCount) {
      return res.status(404).json({ error: 'ะะฐะฟะธัั ะฝะต ะฝะฐะนะดะตะฝะฐ' });
    }

    writeBookings(bookings);
    console.log('๐๏ธ ะะฐะฟะธัั ัะดะฐะปะตะฝะฐ:', { name, datetime });
    res.json({ success: true });

  } catch (err) {
    console.error('โ ะัะธะฑะบะฐ ะฟัะธ ัะดะฐะปะตะฝะธะธ:', err);
    res.status(500).json({ error: 'ะัะธะฑะบะฐ ัะตัะฒะตัะฐ' });
  }
});

// ะะปะฐะฒะฝะฐั ัััะฐะฝะธัะฐ
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'index.html'));
});

// ะะฐัะธัะฐ `/admin.html` ัะตัะตะท Basic Auth
app.get('/admin.html', (req, res) => {
  const auth = req.headers.authorization;

  if (!auth || !auth.startsWith('Basic ')) {
    res.set('WWW-Authenticate', 'Basic realm="Admin"');
    return res.status(401).send('ะะตะพะฑัะพะดะธะผะฐ ะฐะฒัะพัะธะทะฐัะธั');
  }

  const base64Credentials = auth.split(' ')[1];
  const credentials = Buffer.from(base64Credentials, 'base64').toString('utf-8');
  const [username, password] = credentials.split(':');

  if (username === ADMIN_CREDENTIALS.username && password === ADMIN_CREDENTIALS.password) {
    res.sendFile(path.join(__dirname, 'admin.html'));
  } else {
    res.status(401).send('ะะตะฒะตัะฝัะต ะดะฐะฝะฝัะต');
  }
});

// ะกัะฐัะธัะตัะบะธะต ัะฐะนะปั (bookings.html ะธ ะดััะณะธะต)
app.get('/:page.html', (req, res) => {
  const page = req.params.page;
  res.sendFile(path.join(__dirname, `${page}.html`));
});

// ะะฐะฟััะบ ัะตัะฒะตัะฐ
app.listen(PORT, () => {
  console.log(`๐ ะะฐัะธััะฝะฝัะน ัะตัะฒะตั ะทะฐะฟััะตะฝ: http://localhost:${PORT}`);
});
